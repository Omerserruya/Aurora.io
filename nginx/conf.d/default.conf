# Trust specific referers
geo $http_referer $referer_trusted {
    default                     0;
    "0.0.0.0"                 1;
    "127.0.0.1"                 1;
}

# Create a map for blocking POST requests to /api/users/add
map $request_method:$referer_trusted:$http_x_internal_service $block_add_user {
    # Allow if not POST
    "~:~:~"                0;
    # Allow POST with trusted referer
    "POST:1:~"             0;
    # Allow POST with internal service header
    "POST:~:true"          0;
    # Block all other POST requests
    "POST:0:~"             1;
    default                0;
}

# Map for request methods
map $request_method $method_options {
    OPTIONS     1;
    default     0;
}

map $request_method $method_not_options {
    OPTIONS     0;
    default     1;
}

# HTTP server for local development
server {
    listen 80;
    server_name 127.0.0.1;  # Changed to IP address for compatibility
    
    # Increase max body size for large payloads
    client_max_body_size 30M;
    
    # Set global CORS headers for server context
    add_header 'Access-Control-Allow-Origin' $http_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Cookie' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Set-Cookie' always;
    
    # Frontend
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    # Database Service
    location /api/db/ {
        rewrite ^/api/db/(.*) /$1 break;
        proxy_pass http://db-service:4003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_pass_header Set-Cookie;
        proxy_set_header Cookie $http_cookie;

        # Allow CORS for frontend requests
        add_header Access-Control-Allow-Credentials true;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Chatbot Service
    location /api/chatbot/ {
        rewrite ^/api/chatbot/(.*) /$1 break;
        proxy_pass http://chatbot-service:4005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Authentication headers and cookie handling
        proxy_pass_header Set-Cookie;
        proxy_set_header Cookie $http_cookie;
        add_header Access-Control-Allow-Credentials true;
        
        # Timeout settings - extended for AI responses
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # Increase max body size for large payloads
        client_max_body_size 30M;
    }

    # Socket.IO for Chatbot Service
    location /socket.io/ {
        proxy_pass http://chatbot-service:4005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings for WebSocket connections
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Terraform Service
    location /api/iac/ {
        rewrite ^/api/iac/(.*) /iac/$1 break;
        proxy_pass http://tf-service:7810;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Serve uploaded files (avatars, etc.)
    location /uploads/ {
        alias /app/uploads/;
        add_header Cache-Control "public, max-age=3600";
    }

    # Static files (users)
    location /uploads/users/ {
        alias /app/uploads/users/;
        try_files $uri $uri/ =404;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        autoindex on;
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        error_log /var/log/nginx/static_error.log debug;
        access_log /var/log/nginx/static_access.log combined;
    }

    # Handle OPTIONS requests globally
    location @options_handler {
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Cookie,X-Internal-Service' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        add_header 'Content-Length' 0 always;
        return 204;
    }

    # OPTIONS request handler
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Block POST to /api/users/add if not from trusted referer
    if ($block_add_user = 1) {
        return 403 "Access denied: request must come from our frontend";
    }

    # Direct auth routes (for OAuth flows)
    location /auth/ {
        proxy_pass http://auth-service:4002/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie settings for direct auth routes
        proxy_cookie_path / "/";
        proxy_cookie_domain ~.* $host;
        proxy_cookie_flags ~ secure;
    }

    # Forward user requests to user service
    location /api/users/ {
        proxy_pass http://users-service:4001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add cookie and CORS headers
        proxy_pass_header Set-Cookie;
        proxy_set_header Cookie $http_cookie;
        add_header Access-Control-Allow-Credentials true;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Forward cloud query service requests
    location /api/cloud/ {
        proxy_pass http://cloud-query-service:4004/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Mail Service
    location /api/mail/ {
        rewrite ^/api/mail/(.*) /$1 break;
        proxy_pass http://mail-service:4007;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cookie handling
        proxy_pass_header Set-Cookie;
        proxy_set_header Cookie $http_cookie;
        add_header Access-Control-Allow-Credentials true;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Block direct access to MongoDB
    location /mongodb/ {
        # Return 403 Forbidden for any direct access attempt
        return 403;
    }

    # Block direct access to Neo4j
    location /neo4j/ {
        # Return 403 Forbidden for any direct access attempt
        return 403;
    }

    # Error pages
    error_page  404              /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
